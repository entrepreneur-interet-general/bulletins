version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
          - composer-v1-{{ checksum "composer.lock" }}
          - composer-v1-

      - run:
          name: Composer install
          command: |
            composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - restore_cache:
          keys:
            - node-v3-{{ checksum "package.json" }}
            - node-v3-

      - run:
          name: Yarn install
          command: |
            yarn install

      - save_cache:
          key: node-v3-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      - run:
          name: Generate env file
          command: |
            cp .env.example .env
            cp config/projects.example.yml config/projects.yml
            php artisan key:generate

      - run:
          name: Run PHPUnit tests
          command: |
            ./vendor/bin/phpunit

  install_from_composer:
    docker:
      - image: circleci/php:7.2-node-browsers
    steps:
      - run:
          name: Composer create project
          command: |
            composer create-project --prefer-dist --stability=dev entrepreneur-interet-general/bulletins

      - run:
          name: Copy default env file
          command: |
            cd bulletins
            cp .env.example .env
            php artisan key:generate

      - run:
          name: Create database with seeding data
          command: |
            cd bulletins
            touch database/database.sqlite
            php artisan migrate:fresh --seed

      - run:
          name: Start PHP server
          command: |
            cd bulletins
            php artisan serve --port=8000
          background: true

      - run:
          name: Test GET /
          command: |
            sleep 1
            wget --tries=1 http://localhost:8000
workflows:
  version: 2
  commit:
    jobs:
      - build
  cron:
    triggers:
      - schedule:
          cron: "20 1 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - install_from_composer
